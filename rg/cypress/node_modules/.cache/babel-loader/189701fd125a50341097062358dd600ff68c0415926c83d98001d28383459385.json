{"ast":null,"code":"import React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{addRow,removeRow,updateRow,submitInputPage}from'../../features/ui/uiSlice';import{validateRowsState}from'../../features/validate/validateSlice';// Import the action\nimport{setCurrentPage}from'../../features/game/gameSlice';import{InputView}from'./InputView';import{PAGES}from'../../features/constants';import{jsx as _jsx}from\"react/jsx-runtime\";const InputPage=()=>{const topic=useSelector(state=>state.ui.topic);const rows=useSelector(state=>state.ui.rows);const dispatch=useDispatch();const rowsValidationResult=useSelector(state=>state.validate.rowsValidationResult);useEffect(()=>{// Run validation on rows change\ndispatch(validateRowsState(rows));},[rows,dispatch]);// Determine if the submit button should be enabled\nconst isSubmitEnabled=(rowsValidationResult===null||rowsValidationResult===void 0?void 0:rowsValidationResult.isValid)&&rows.length>0;const handleAddRow=()=>{dispatch(addRow());};const handleItemChange=(index,value)=>{dispatch(updateRow({index,updatedValue:value}));};const handleRemoveRow=index=>{dispatch(removeRow(index));};const handleSubmit=()=>{if(isSubmitEnabled){dispatch(submitInputPage());dispatch(setCurrentPage(PAGES.MATCHUP));// Move to the next page if submission is successful\n}else{console.error('Submission failed: Rows are not valid.');}};return/*#__PURE__*/_jsx(InputView,{topic:topic,rows:rows,handleAddRow:handleAddRow,handleRemoveRow:handleRemoveRow,handleItemChange:handleItemChange,handleSubmit:handleSubmit,isSubmitEnabled:isSubmitEnabled});};export default InputPage;","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","addRow","removeRow","updateRow","submitInputPage","validateRowsState","setCurrentPage","InputView","PAGES","jsx","_jsx","InputPage","topic","state","ui","rows","dispatch","rowsValidationResult","validate","isSubmitEnabled","isValid","length","handleAddRow","handleItemChange","index","value","updatedValue","handleRemoveRow","handleSubmit","MATCHUP","console","error"],"sources":["/Users/ruth/Dropbox/Developer/apps/ps/rg/src/components/Input/InputPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addRow, removeRow, updateRow, submitInputPage } from '../../features/ui/uiSlice';\nimport { validateRowsState } from '../../features/validate/validateSlice'; // Import the action\nimport { setCurrentPage } from '../../features/game/gameSlice';\nimport { InputView } from './InputView';\nimport { PAGES } from '../../features/constants';\n\nconst InputPage = () => {\n    const topic = useSelector((state) => state.ui.topic);\n    const rows = useSelector((state) => state.ui.rows);\n    const dispatch = useDispatch();\n    const rowsValidationResult = useSelector((state) => state.validate.rowsValidationResult);\n\n    useEffect(() => {\n        // Run validation on rows change\n        dispatch(validateRowsState(rows));\n    }, [rows, dispatch]);\n\n    // Determine if the submit button should be enabled\n    const isSubmitEnabled = rowsValidationResult?.isValid && rows.length > 0;\n\n    const handleAddRow = () => {\n        dispatch(addRow());\n    };\n\n    const handleItemChange = (index, value) => {\n        dispatch(updateRow({ index, updatedValue: value }));\n    };\n\n    const handleRemoveRow = (index) => {\n        dispatch(removeRow(index));\n    };\n\n    const handleSubmit = () => {\n        if (isSubmitEnabled) {\n            dispatch(submitInputPage());\n            dispatch(setCurrentPage(PAGES.MATCHUP)); // Move to the next page if submission is successful\n        } else {\n            console.error('Submission failed: Rows are not valid.');\n        }\n    };\n\n    return (\n        <InputView \n            topic={topic}\n            rows={rows}\n            handleAddRow={handleAddRow} \n            handleRemoveRow={handleRemoveRow}\n            handleItemChange={handleItemChange}\n            handleSubmit={handleSubmit}\n            isSubmitEnabled={isSubmitEnabled}\n        />\n    );\n};\n\nexport default InputPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,MAAM,CAAEC,SAAS,CAAEC,SAAS,CAAEC,eAAe,KAAQ,2BAA2B,CACzF,OAASC,iBAAiB,KAAQ,uCAAuC,CAAE;AAC3E,OAASC,cAAc,KAAQ,+BAA+B,CAC9D,OAASC,SAAS,KAAQ,aAAa,CACvC,OAASC,KAAK,KAAQ,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACpB,KAAM,CAAAC,KAAK,CAAGb,WAAW,CAAEc,KAAK,EAAKA,KAAK,CAACC,EAAE,CAACF,KAAK,CAAC,CACpD,KAAM,CAAAG,IAAI,CAAGhB,WAAW,CAAEc,KAAK,EAAKA,KAAK,CAACC,EAAE,CAACC,IAAI,CAAC,CAClD,KAAM,CAAAC,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAiB,oBAAoB,CAAGlB,WAAW,CAAEc,KAAK,EAAKA,KAAK,CAACK,QAAQ,CAACD,oBAAoB,CAAC,CAExFnB,SAAS,CAAC,IAAM,CACZ;AACAkB,QAAQ,CAACX,iBAAiB,CAACU,IAAI,CAAC,CAAC,CACrC,CAAC,CAAE,CAACA,IAAI,CAAEC,QAAQ,CAAC,CAAC,CAEpB;AACA,KAAM,CAAAG,eAAe,CAAG,CAAAF,oBAAoB,SAApBA,oBAAoB,iBAApBA,oBAAoB,CAAEG,OAAO,GAAIL,IAAI,CAACM,MAAM,CAAG,CAAC,CAExE,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACvBN,QAAQ,CAACf,MAAM,CAAC,CAAC,CAAC,CACtB,CAAC,CAED,KAAM,CAAAsB,gBAAgB,CAAGA,CAACC,KAAK,CAAEC,KAAK,GAAK,CACvCT,QAAQ,CAACb,SAAS,CAAC,CAAEqB,KAAK,CAAEE,YAAY,CAAED,KAAM,CAAC,CAAC,CAAC,CACvD,CAAC,CAED,KAAM,CAAAE,eAAe,CAAIH,KAAK,EAAK,CAC/BR,QAAQ,CAACd,SAAS,CAACsB,KAAK,CAAC,CAAC,CAC9B,CAAC,CAED,KAAM,CAAAI,YAAY,CAAGA,CAAA,GAAM,CACvB,GAAIT,eAAe,CAAE,CACjBH,QAAQ,CAACZ,eAAe,CAAC,CAAC,CAAC,CAC3BY,QAAQ,CAACV,cAAc,CAACE,KAAK,CAACqB,OAAO,CAAC,CAAC,CAAE;AAC7C,CAAC,IAAM,CACHC,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC,CAC3D,CACJ,CAAC,CAED,mBACIrB,IAAA,CAACH,SAAS,EACNK,KAAK,CAAEA,KAAM,CACbG,IAAI,CAAEA,IAAK,CACXO,YAAY,CAAEA,YAAa,CAC3BK,eAAe,CAAEA,eAAgB,CACjCJ,gBAAgB,CAAEA,gBAAiB,CACnCK,YAAY,CAAEA,YAAa,CAC3BT,eAAe,CAAEA,eAAgB,CACpC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAR,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}