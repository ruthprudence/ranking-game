{"ast":null,"code":"export const selectCurrentPair = state => {\n  return state.matchup.pairs[state.matchup.currentPairIndex];\n};\nexport const selectInitialScores = state => {\n  const initialScores = {};\n  state.matchup.rows.forEach(choice => {\n    initialScores[choice.trim()] = 0;\n  });\n  return initialScores;\n};\nexport const selectSortedPriorities = state => {\n  return Object.keys(state.matchup.scores).sort((a, b) => state.matchup.scores[b] - state.matchup.scores[a]);\n};\nexport const selectAdjustedRankings = state => {\n  const sortedChoices = Object.entries(state.matchup.scores).sort((a, b) => b[1] - a[1]);\n  let lastScore = null,\n    rank = 0;\n  return sortedChoices.map(([choice, score], index) => {\n    if (score !== lastScore) {\n      rank = index + 1;\n      lastScore = score;\n    }\n    return [choice, score, rank];\n  });\n};\nexport const selectCurrentPairItems = state => {\n  const pair = selectCurrentPair(state);\n  return pair ? [state.matchup.items[pair[0]], state.matchup.items[pair[1]]] : null;\n};","map":{"version":3,"names":["selectCurrentPair","state","matchup","pairs","currentPairIndex","selectInitialScores","initialScores","rows","forEach","choice","trim","selectSortedPriorities","Object","keys","scores","sort","a","b","selectAdjustedRankings","sortedChoices","entries","lastScore","rank","map","score","index","selectCurrentPairItems","pair","items"],"sources":["/Users/ruth/Dropbox/Developer/apps/ps/rg/src/selectors/matchupSelectors.js"],"sourcesContent":["export const selectCurrentPair = (state) => {\n  return state.matchup.pairs[state.matchup.currentPairIndex];\n};\n\n  \n  export const selectInitialScores = (state) => {\n    const initialScores = {};\n    state.matchup.rows.forEach(choice => {\n      initialScores[choice.trim()] = 0;\n    });\n    return initialScores;\n  };\n  \n  export const selectSortedPriorities = (state) => {\n    return Object.keys(state.matchup.scores).sort((a, b) => state.matchup.scores[b] - state.matchup.scores[a]);\n  };\n  \n  export const selectAdjustedRankings = (state) => {\n    const sortedChoices = Object.entries(state.matchup.scores).sort((a, b) => b[1] - a[1]);\n    let lastScore = null, rank = 0;\n    return sortedChoices.map(([choice, score], index) => {\n      if (score !== lastScore) {\n        rank = index + 1;\n        lastScore = score;\n      }\n      return [choice, score, rank];\n    });\n  };\n\n  export const selectCurrentPairItems = (state) => {\n    const pair = selectCurrentPair(state);\n    return pair ? [state.matchup.items[pair[0]], state.matchup.items[pair[1]]] : null;\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAIC,KAAK,IAAK;EAC1C,OAAOA,KAAK,CAACC,OAAO,CAACC,KAAK,CAACF,KAAK,CAACC,OAAO,CAACE,gBAAgB,CAAC;AAC5D,CAAC;AAGC,OAAO,MAAMC,mBAAmB,GAAIJ,KAAK,IAAK;EAC5C,MAAMK,aAAa,GAAG,CAAC,CAAC;EACxBL,KAAK,CAACC,OAAO,CAACK,IAAI,CAACC,OAAO,CAACC,MAAM,IAAI;IACnCH,aAAa,CAACG,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;EAClC,CAAC,CAAC;EACF,OAAOJ,aAAa;AACtB,CAAC;AAED,OAAO,MAAMK,sBAAsB,GAAIV,KAAK,IAAK;EAC/C,OAAOW,MAAM,CAACC,IAAI,CAACZ,KAAK,CAACC,OAAO,CAACY,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKhB,KAAK,CAACC,OAAO,CAACY,MAAM,CAACG,CAAC,CAAC,GAAGhB,KAAK,CAACC,OAAO,CAACY,MAAM,CAACE,CAAC,CAAC,CAAC;AAC5G,CAAC;AAED,OAAO,MAAME,sBAAsB,GAAIjB,KAAK,IAAK;EAC/C,MAAMkB,aAAa,GAAGP,MAAM,CAACQ,OAAO,CAACnB,KAAK,CAACC,OAAO,CAACY,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;EACtF,IAAIK,SAAS,GAAG,IAAI;IAAEC,IAAI,GAAG,CAAC;EAC9B,OAAOH,aAAa,CAACI,GAAG,CAAC,CAAC,CAACd,MAAM,EAAEe,KAAK,CAAC,EAAEC,KAAK,KAAK;IACnD,IAAID,KAAK,KAAKH,SAAS,EAAE;MACvBC,IAAI,GAAGG,KAAK,GAAG,CAAC;MAChBJ,SAAS,GAAGG,KAAK;IACnB;IACA,OAAO,CAACf,MAAM,EAAEe,KAAK,EAAEF,IAAI,CAAC;EAC9B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,sBAAsB,GAAIzB,KAAK,IAAK;EAC/C,MAAM0B,IAAI,GAAG3B,iBAAiB,CAACC,KAAK,CAAC;EACrC,OAAO0B,IAAI,GAAG,CAAC1B,KAAK,CAACC,OAAO,CAAC0B,KAAK,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE1B,KAAK,CAACC,OAAO,CAAC0B,KAAK,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACnF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}