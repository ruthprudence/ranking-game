{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { pairingLogic } from './pairingLogic';\nexport const matchupSlice = createSlice({\n  name: 'matchup',\n  initialState: {\n    currentPairIndex: 0,\n    isComparisonComplete: false,\n    pairs: []\n  },\n  reducers: {\n    startMatchup: (state, action) => {\n      const items = action.payload;\n      state.pairs = pairingLogic(items);\n      state.currentPairIndex = 0;\n      state.isComparisonComplete = false;\n    },\n    nextPair: state => {\n      if (state.currentPairIndex < state.pairs.length - 1) {\n        state.currentPairIndex += 1;\n      } else {\n        state.isComparisonComplete = true;\n      }\n    },\n    handleChoice: state => {\n      if (state.currentPairIndex < state.pairs.length - 1) {\n        state.currentPairIndex += 1;\n      } else {\n        state.isComparisonComplete = true;\n      }\n    }\n  }\n});\nexport const {\n  startMatchup,\n  nextPair,\n  handleChoice\n} = matchupSlice.actions;\nexport default matchupSlice.reducer;","map":{"version":3,"names":["createSlice","pairingLogic","matchupSlice","name","initialState","currentPairIndex","isComparisonComplete","pairs","reducers","startMatchup","state","action","items","payload","nextPair","length","handleChoice","actions","reducer"],"sources":["/Users/ruth/Dropbox/Developer/apps/ps/rg/src/features/matchup/matchupSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { pairingLogic } from './pairingLogic';\n\nexport const matchupSlice = createSlice({\n  name: 'matchup',\n  initialState: {\n    currentPairIndex: 0,\n    isComparisonComplete: false,\n    pairs: [],\n  },\n  reducers: {\n    startMatchup: (state, action) => {\n      const items = action.payload;\n      state.pairs = pairingLogic(items);\n      state.currentPairIndex = 0;\n      state.isComparisonComplete = false;\n    },\n    nextPair: (state) => {\n      if (state.currentPairIndex < state.pairs.length - 1) {\n        state.currentPairIndex += 1;\n      } else {\n        state.isComparisonComplete = true;\n      }\n    },\n    handleChoice: (state) => {\n      if (state.currentPairIndex < state.pairs.length - 1) {\n        state.currentPairIndex += 1;\n      } else {\n        state.isComparisonComplete = true;\n      }\n    },\n  },\n});\n\nexport const { startMatchup, nextPair, handleChoice } = matchupSlice.actions;\n\nexport default matchupSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC;EACtCG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,gBAAgB,EAAE,CAAC;IACnBC,oBAAoB,EAAE,KAAK;IAC3BC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAMC,KAAK,GAAGD,MAAM,CAACE,OAAO;MAC5BH,KAAK,CAACH,KAAK,GAAGN,YAAY,CAACW,KAAK,CAAC;MACjCF,KAAK,CAACL,gBAAgB,GAAG,CAAC;MAC1BK,KAAK,CAACJ,oBAAoB,GAAG,KAAK;IACpC,CAAC;IACDQ,QAAQ,EAAGJ,KAAK,IAAK;MACnB,IAAIA,KAAK,CAACL,gBAAgB,GAAGK,KAAK,CAACH,KAAK,CAACQ,MAAM,GAAG,CAAC,EAAE;QACnDL,KAAK,CAACL,gBAAgB,IAAI,CAAC;MAC7B,CAAC,MAAM;QACLK,KAAK,CAACJ,oBAAoB,GAAG,IAAI;MACnC;IACF,CAAC;IACDU,YAAY,EAAGN,KAAK,IAAK;MACvB,IAAIA,KAAK,CAACL,gBAAgB,GAAGK,KAAK,CAACH,KAAK,CAACQ,MAAM,GAAG,CAAC,EAAE;QACnDL,KAAK,CAACL,gBAAgB,IAAI,CAAC;MAC7B,CAAC,MAAM;QACLK,KAAK,CAACJ,oBAAoB,GAAG,IAAI;MACnC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,YAAY;EAAEK,QAAQ;EAAEE;AAAa,CAAC,GAAGd,YAAY,CAACe,OAAO;AAE5E,eAAef,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}