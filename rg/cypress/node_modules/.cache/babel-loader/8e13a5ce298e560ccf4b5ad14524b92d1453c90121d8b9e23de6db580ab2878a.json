{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const validateSlice = createSlice({\n  name: 'validate',\n  initialState: {\n    isTopicValid: false,\n    areInputsValid: false,\n    topicValidationResult: {\n      isValid: false,\n      message: ''\n    },\n    rowsValidationResult: {\n      isValid: false,\n      message: ''\n    }\n  },\n  reducers: {\n    validateTopicState: (state, action) => {\n      const topic = action.payload;\n      const isValid = topic.trim() !== '';\n      state.isTopicValid = isValid; // Update the isTopicValid state directly\n      state.topicValidationResult = {\n        isValid,\n        message: isValid ? '' : 'Topic is required.'\n      };\n    },\n    validateRowsState: (state, action) => {\n      const rows = action.payload;\n      const isValid = rows.every(row => row.trim() !== '');\n      state.areInputsValid = isValid; // Update the areInputsValid state directly\n      state.rowsValidationResult = {\n        isValid,\n        message: isValid ? 'Items are valid' : 'All items must be filled in.'\n      };\n    }\n  }\n});\nexport const {\n  validateTopicState,\n  validateRowsState\n} = validateSlice.actions;\nexport default validateSlice.reducer;","map":{"version":3,"names":["createSlice","validateSlice","name","initialState","isTopicValid","areInputsValid","topicValidationResult","isValid","message","rowsValidationResult","reducers","validateTopicState","state","action","topic","payload","trim","validateRowsState","rows","every","row","actions","reducer"],"sources":["/Users/ruth/Dropbox/Developer/apps/ps/rg/src/features/validate/validateSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const validateSlice = createSlice({\n  name: 'validate',\n  initialState: {\n    isTopicValid: false,\n    areInputsValid: false,\n    topicValidationResult: { isValid: false, message: '' },\n    rowsValidationResult: { isValid: false, message: '' }\n  },\n  reducers: {\n    validateTopicState: (state, action) => {\n      const topic = action.payload;\n      const isValid = topic.trim() !== '';\n      state.isTopicValid = isValid; // Update the isTopicValid state directly\n      state.topicValidationResult = {\n        isValid,\n        message: isValid ? '' : 'Topic is required.'\n      };\n    },\n    validateRowsState: (state, action) => {\n      const rows = action.payload;\n      const isValid = rows.every(row => row.trim() !== '');\n      state.areInputsValid = isValid; // Update the areInputsValid state directly\n      state.rowsValidationResult = {\n        isValid,\n        message: isValid ? 'Items are valid' : 'All items must be filled in.'\n      };\n    }\n  }\n});\n\nexport const { validateTopicState, validateRowsState } = validateSlice.actions;\nexport default validateSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,aAAa,GAAGD,WAAW,CAAC;EACvCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,YAAY,EAAE,KAAK;IACnBC,cAAc,EAAE,KAAK;IACrBC,qBAAqB,EAAE;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAG,CAAC;IACtDC,oBAAoB,EAAE;MAAEF,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAG;EACtD,CAAC;EACDE,QAAQ,EAAE;IACRC,kBAAkB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrC,MAAMC,KAAK,GAAGD,MAAM,CAACE,OAAO;MAC5B,MAAMR,OAAO,GAAGO,KAAK,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE;MACnCJ,KAAK,CAACR,YAAY,GAAGG,OAAO,CAAC,CAAC;MAC9BK,KAAK,CAACN,qBAAqB,GAAG;QAC5BC,OAAO;QACPC,OAAO,EAAED,OAAO,GAAG,EAAE,GAAG;MAC1B,CAAC;IACH,CAAC;IACDU,iBAAiB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACpC,MAAMK,IAAI,GAAGL,MAAM,CAACE,OAAO;MAC3B,MAAMR,OAAO,GAAGW,IAAI,CAACC,KAAK,CAACC,GAAG,IAAIA,GAAG,CAACJ,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;MACpDJ,KAAK,CAACP,cAAc,GAAGE,OAAO,CAAC,CAAC;MAChCK,KAAK,CAACH,oBAAoB,GAAG;QAC3BF,OAAO;QACPC,OAAO,EAAED,OAAO,GAAG,iBAAiB,GAAG;MACzC,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,kBAAkB;EAAEM;AAAkB,CAAC,GAAGhB,aAAa,CAACoB,OAAO;AAC9E,eAAepB,aAAa,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}