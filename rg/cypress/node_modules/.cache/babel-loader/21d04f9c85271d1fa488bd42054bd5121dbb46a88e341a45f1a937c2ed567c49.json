{"ast":null,"code":"import{createAsyncThunk}from'@reduxjs/toolkit';import{submitTopic}from'../actions';import{sanitizeAndTruncate}from'../ui/inputUtils';// Import the utility function\nexport const validateTopic=createAsyncThunk('validate/validateTopic',async(topic,_ref)=>{let{dispatch}=_ref;const processedTopic=sanitizeAndTruncate(topic);const isTopicValid=processedTopic.trim()!=='';if(isTopicValid){dispatch(submitTopic(processedTopic));return{isTopicValid,topic:processedTopic};}else{return{isTopicValid,topicError:'Topic is required.'};}});","map":{"version":3,"names":["createAsyncThunk","submitTopic","sanitizeAndTruncate","validateTopic","topic","_ref","dispatch","processedTopic","isTopicValid","trim","topicError"],"sources":["/Users/ruth/Dropbox/Developer/apps/ps/rg/src/features/validate/validateTopic.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { submitTopic } from '../actions';\nimport { sanitizeAndTruncate } from '../ui/inputUtils'; // Import the utility function\n\nexport const validateTopic = createAsyncThunk(\n    'validate/validateTopic',\n    async (topic, { dispatch }) => {\n        const processedTopic = sanitizeAndTruncate(topic);\n        const isTopicValid = processedTopic.trim() !== '';\n\n        if (isTopicValid) {\n            dispatch(submitTopic(processedTopic));\n            return { isTopicValid, topic: processedTopic };\n        } else {\n            return { isTopicValid, topicError: 'Topic is required.' };\n        }\n    }\n);\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,kBAAkB,CACnD,OAASC,WAAW,KAAQ,YAAY,CACxC,OAASC,mBAAmB,KAAQ,kBAAkB,CAAE;AAExD,MAAO,MAAM,CAAAC,aAAa,CAAGH,gBAAgB,CACzC,wBAAwB,CACxB,MAAOI,KAAK,CAAAC,IAAA,GAAmB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtB,KAAM,CAAAE,cAAc,CAAGL,mBAAmB,CAACE,KAAK,CAAC,CACjD,KAAM,CAAAI,YAAY,CAAGD,cAAc,CAACE,IAAI,CAAC,CAAC,GAAK,EAAE,CAEjD,GAAID,YAAY,CAAE,CACdF,QAAQ,CAACL,WAAW,CAACM,cAAc,CAAC,CAAC,CACrC,MAAO,CAAEC,YAAY,CAAEJ,KAAK,CAAEG,cAAe,CAAC,CAClD,CAAC,IAAM,CACH,MAAO,CAAEC,YAAY,CAAEE,UAAU,CAAE,oBAAqB,CAAC,CAC7D,CACJ,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}