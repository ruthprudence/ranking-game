{"ast":null,"code":"// uiSlice.js\nimport { createSlice, createAction } from '@reduxjs/toolkit';\nimport { createItemsWithVotes } from '../matchup/createItemsWithVotes';\nimport { initializeScores } from '../matchup/initializeScores';\nimport { MAXCHOICES, MINCHOICES } from '../constants';\nimport { pairingLogic } from '../matchup/pairingLogic';\nexport const transitionToMatchup = createAction('ui/transitionToMatchup');\nimport { calculateRankings } from '../results/calculateRankings';\nimport { calculateScores } from '../results/calculateScores';\nexport const uiSlice = createSlice({\n  name: 'ui',\n  initialState: {\n    topic: '',\n    rows: ['', '', ''],\n    items: [],\n    scores: {},\n    pairs: [],\n    currentPairIndex: 0,\n    isComparisonComplete: false\n  },\n  reducers: {\n    /** Splash Page */\n    submitTopic: (state, action) => {\n      const topic = action.payload;\n      if (!topic.trim()) {\n        alert('Please enter a topic.');\n        return;\n      }\n      state.topic = topic;\n    },\n    setTopic: (state, action) => {\n      state.topic = action.payload;\n    },\n    /** Input Page */\n    submitInputPage: state => {\n      state.items = createItemsWithVotes(state.rows);\n      state.scores = initializeScores(state);\n    },\n    addItem: state => {\n      state.items.push('');\n    },\n    updateItem: (state, action) => {\n      const {\n        index,\n        value\n      } = action.payload;\n      state.items[index] = value;\n    },\n    removeItem: (state, action) => {\n      state.items.splice(action.payload, 1);\n    },\n    setItems: (state, action) => {\n      state.items = action.payload;\n    },\n    addRow: state => {\n      if (state.rows.length < MAXCHOICES) {\n        state.rows.push('');\n      }\n    },\n    removeRow: (state, action) => {\n      if (state.rows.length > MINCHOICES && action.payload >= 0 && action.payload < state.rows.length) {\n        state.rows.splice(action.payload, 1);\n      }\n    },\n    updateRow: (state, action) => {\n      const {\n        index,\n        updatedValue\n      } = action.payload;\n      if (index >= 0 && index < state.rows.length) {\n        state.rows[index] = updatedValue;\n      }\n    },\n    setValue: (state, action) => {\n      state.value = action.payload;\n    },\n    startMatchup: (state, action) => {\n      const items = action.payload;\n      state.pairs = pairingLogic(items);\n      state.currentPairIndex = 0;\n      state.isComparisonComplete = false;\n    },\n    selectChoice: (state, action) => {\n      const choiceName = action.payload;\n      console.log(\"Selected choice name:\", choiceName);\n      console.log(\"Current items before update:\", state.items);\n      const updatedItems = state.items.map(item => {\n        if (item.name === choiceName) {\n          console.log(`Updating votes for ${choiceName}`);\n          return {\n            ...item,\n            votes: (item.votes || 0) + 1\n          };\n        }\n        return item;\n      });\n      console.log(\"Updated items:\", updatedItems);\n      state.items = updatedItems;\n    },\n    incrementVote: (state, action) => {\n      const selectedItem = action.payload;\n      const itemIndex = state.items.findIndex(item => item.id === selectedItem.id);\n      if (itemIndex !== -1) {\n        state.items[itemIndex].votes += 1;\n      }\n    },\n    nextPair: state => {\n      console.log(\"Current pair index before update:\", state.currentPairIndex);\n      console.log(\"Pairs:\", state.pairs);\n      state.currentPairIndex += 1;\n      console.log(\"Updated current pair index:\", state.currentPairIndex);\n      console.log(\"New Current Pair:\", state.pairs[state.currentPairIndex]);\n    },\n    handleChoiceSelect: (state, action) => {\n      const {\n        choiceIndex,\n        items\n      } = action.payload;\n      if (state.pairs.length > state.currentPairIndex) {\n        const currentPair = state.pairs[state.currentPairIndex];\n        if (currentPair && currentPair.length === 2) {\n          const selectedItem = items[currentPair[choiceIndex]];\n          if (selectedItem) {\n            // Directly update votes here\n            const itemIndex = state.items.findIndex(item => item.id === selectedItem.id);\n            if (itemIndex !== -1) {\n              state.items[itemIndex].votes += 1; // Increment votes\n            }\n            state.currentPairIndex += 1;\n          }\n        }\n      }\n\n      // Check if the comparison is complete\n      if (state.currentPairIndex >= state.pairs.length) {\n        state.isComparisonComplete = true;\n      }\n    },\n    completeMatchup: (state, action) => {\n      const {\n        items,\n        scores\n      } = action.payload;\n      state.rankings = calculateRankings(items, scores);\n    }\n  }\n});\nexport const selectItems = state => state.ui.items;\nexport const {\n  addItem,\n  updateItem,\n  removeItem,\n  setItems,\n  addRow,\n  removeRow,\n  updateRow,\n  setValue,\n  setTopic,\n  submitInputPage,\n  submitTopic,\n  submitTopicAndAdvance,\n  handleValidation,\n  handleTopicSubmit,\n  selectChoice,\n  incrementVote,\n  startMatchup,\n  nextPair,\n  handleChoiceSelect,\n  completeMatchup\n} = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","createAction","createItemsWithVotes","initializeScores","MAXCHOICES","MINCHOICES","pairingLogic","transitionToMatchup","calculateRankings","calculateScores","uiSlice","name","initialState","topic","rows","items","scores","pairs","currentPairIndex","isComparisonComplete","reducers","submitTopic","state","action","payload","trim","alert","setTopic","submitInputPage","addItem","push","updateItem","index","value","removeItem","splice","setItems","addRow","length","removeRow","updateRow","updatedValue","setValue","startMatchup","selectChoice","choiceName","console","log","updatedItems","map","item","votes","incrementVote","selectedItem","itemIndex","findIndex","id","nextPair","handleChoiceSelect","choiceIndex","currentPair","completeMatchup","rankings","selectItems","ui","submitTopicAndAdvance","handleValidation","handleTopicSubmit","actions","reducer"],"sources":["/Users/ruth/Dropbox/Developer/apps/ps/rg/src/features/ui/uiSlice.js"],"sourcesContent":["// uiSlice.js\nimport { createSlice, createAction} from '@reduxjs/toolkit';\nimport { createItemsWithVotes } from '../matchup/createItemsWithVotes';\nimport { initializeScores } from '../matchup/initializeScores';\nimport { MAXCHOICES, MINCHOICES } from '../constants';\nimport { pairingLogic } from '../matchup/pairingLogic';\nexport const transitionToMatchup = createAction('ui/transitionToMatchup');\nimport { calculateRankings } from '../results/calculateRankings';\nimport { calculateScores } from '../results/calculateScores';\n\nexport const uiSlice = createSlice({\n  name: 'ui',\n  initialState: {\n    topic: '',\n    rows: ['', '', ''],\n    items: [],\n    scores: {},\n    pairs: [],\n    currentPairIndex: 0,\n    isComparisonComplete: false,\n  },\n  reducers: {\n    /** Splash Page */\n    submitTopic: (state, action) => {\n      const topic = action.payload;\n      if (!topic.trim()) {\n          alert('Please enter a topic.');\n          return;\n      }\n      state.topic = topic;\n    },\n    setTopic: (state, action) => {\n      state.topic = action.payload;\n    },\n\n    /** Input Page */\n    submitInputPage: (state) => {\n          state.items = createItemsWithVotes(state.rows);\n          state.scores = initializeScores(state);\n    },  \n    addItem: (state) => {\n          state.items.push('');\n    },\n    updateItem: (state, action) => {\n          const { index, value } = action.payload;\n          state.items[index] = value;\n    },\n    removeItem: (state, action) => {\n        state.items.splice(action.payload, 1);\n    },\n    setItems: (state, action) => {\n        state.items = action.payload;\n    },\n    addRow: (state) => {\n        if (state.rows.length < MAXCHOICES) {\n          state.rows.push('');\n        }\n    },\n    removeRow: (state, action) => {\n        if (state.rows.length > MINCHOICES && action.payload >= 0 && action.payload < state.rows.length) {\n          state.rows.splice(action.payload, 1);\n        }\n    },\n    updateRow: (state, action) => {\n        const { index, updatedValue } = action.payload;\n        if (index >= 0 && index < state.rows.length) {\n            state.rows[index] = updatedValue;\n        }\n    },\n    setValue: (state, action) => {\n        state.value = action.payload;\n    },  \n    startMatchup: (state, action) => {\n      const items = action.payload;\n      state.pairs = pairingLogic(items);\n      state.currentPairIndex = 0;\n      state.isComparisonComplete = false;\n    },  \n    selectChoice: (state, action) => {\n      const choiceName = action.payload;\n      console.log(\"Selected choice name:\", choiceName);\n      console.log(\"Current items before update:\", state.items);\n    \n      const updatedItems = state.items.map(item => {\n        if (item.name === choiceName) {\n          console.log(`Updating votes for ${choiceName}`);\n          return { ...item, votes: (item.votes || 0) + 1 };\n        }\n        return item;\n      });\n    \n      console.log(\"Updated items:\", updatedItems);\n      state.items = updatedItems;\n    },\n    incrementVote: (state, action) => {\n      const selectedItem = action.payload;\n      const itemIndex = state.items.findIndex(item => item.id === selectedItem.id);\n      if (itemIndex !== -1) {\n        state.items[itemIndex].votes += 1;\n      }\n    },\n\n    nextPair: (state) => {\n      console.log(\"Current pair index before update:\", state.currentPairIndex);\n      console.log(\"Pairs:\", state.pairs);\n      state.currentPairIndex += 1;\n      console.log(\"Updated current pair index:\", state.currentPairIndex);\n      console.log(\"New Current Pair:\", state.pairs[state.currentPairIndex]);\n    },\n    handleChoiceSelect: (state, action) => {\n      const { choiceIndex, items } = action.payload;\n    \n      if (state.pairs.length > state.currentPairIndex) {\n        const currentPair = state.pairs[state.currentPairIndex];\n        if (currentPair && currentPair.length === 2) {\n          const selectedItem = items[currentPair[choiceIndex]];\n          \n          if (selectedItem) {\n            // Directly update votes here\n            const itemIndex = state.items.findIndex(item => item.id === selectedItem.id);\n            if (itemIndex !== -1) {\n              state.items[itemIndex].votes += 1; // Increment votes\n            }\n            state.currentPairIndex += 1;\n          }\n        }\n      }\n    \n      // Check if the comparison is complete\n      if (state.currentPairIndex >= state.pairs.length) {\n        state.isComparisonComplete = true;\n      }\n    },\n    completeMatchup: (state, action) => {\n      const { items, scores } = action.payload;\n      state.rankings = calculateRankings(items, scores);\n  },\n    \n  \n  },\n});\n\nexport const selectItems = (state) => state.ui.items;\n\nexport const { addItem, updateItem, removeItem, setItems, addRow, removeRow, updateRow, setValue, setTopic, submitInputPage, submitTopic, submitTopicAndAdvance, handleValidation, handleTopicSubmit, selectChoice, incrementVote, startMatchup, nextPair, handleChoiceSelect, completeMatchup } = uiSlice.actions;\n  \n  export default uiSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}