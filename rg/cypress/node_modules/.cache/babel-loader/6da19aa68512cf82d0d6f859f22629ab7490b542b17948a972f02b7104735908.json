{"ast":null,"code":"import{MAXLENGTH}from\"../constants\";export const sanitizeAndTruncate=function(input){let maxLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:MAXLENGTH;// Sanitize input to replace < and > with HTML entities\nconst sanitizedInput=input.replace(/</g,'&lt;').replace(/>/g,'&gt;');// Truncate input to the specified maxLength\nreturn sanitizedInput.length>maxLength?sanitizedInput.substring(0,maxLength):sanitizedInput;};","map":{"version":3,"names":["MAXLENGTH","sanitizeAndTruncate","input","maxLength","arguments","length","undefined","sanitizedInput","replace","substring"],"sources":["/Users/ruth/Dropbox/Developer/apps/ps/rg/src/features/ui/inputUtils.js"],"sourcesContent":["import { MAXLENGTH } from \"../constants\";\n\nexport const sanitizeAndTruncate = (input, maxLength = MAXLENGTH) => {\n    // Sanitize input to replace < and > with HTML entities\n    const sanitizedInput = input.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  \n    // Truncate input to the specified maxLength\n    return sanitizedInput.length > maxLength ? sanitizedInput.substring(0, maxLength) : sanitizedInput;\n};\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,cAAc,CAExC,MAAO,MAAM,CAAAC,mBAAmB,CAAG,QAAAA,CAACC,KAAK,CAA4B,IAA1B,CAAAC,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGJ,SAAS,CAC5D;AACA,KAAM,CAAAO,cAAc,CAAGL,KAAK,CAACM,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,CAACA,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,CAExE;AACA,MAAO,CAAAD,cAAc,CAACF,MAAM,CAAGF,SAAS,CAAGI,cAAc,CAACE,SAAS,CAAC,CAAC,CAAEN,SAAS,CAAC,CAAGI,cAAc,CACtG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}