{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk for submitting bug report\nexport const submitBugReport = createAsyncThunk('bugs/submitBugReport', async (bugData, {\n  rejectWithValue\n}) => {\n  try {\n    // API call to submit bug data\n    const response = await fetch('https://ruthprudence.com/rg/api/bug-report', {\n      method: 'POST',\n      body: JSON.stringify(bugData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Check if the response is ok\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to submit bug report');\n    }\n\n    // Parse and return the response data\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst initialState = {\n  description: '',\n  stepsToReproduce: '',\n  contactEmail: '',\n  isSubmitting: false,\n  submitSuccess: false,\n  submitError: null\n};\nexport const bugSlice = createSlice({\n  name: 'bugs',\n  initialState,\n  reducers: {\n    updateDescription: (state, action) => {\n      state.description = action.payload;\n    },\n    // ... other reducers for updating form fields\n    resetBugReportForm: () => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(submitBugReport.pending, state => {\n      state.isSubmitting = true;\n    }).addCase(submitBugReport.fulfilled, (state, action) => {\n      state.isSubmitting = false;\n      state.submitSuccess = true;\n      state.submitError = null;\n      state.responseMessage = action.payload.message; // Store success message from response\n    }).addCase(submitBugReport.rejected, (state, action) => {\n      state.isSubmitting = false;\n      state.submitError = action.payload; // Store error message\n    });\n  }\n});\nexport const {\n  updateDescription,\n  resetBugReportForm\n} = bugSlice.actions;\nexport default bugSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","submitBugReport","bugData","rejectWithValue","response","fetch","method","body","JSON","stringify","headers","ok","errorData","json","Error","message","error","initialState","description","stepsToReproduce","contactEmail","isSubmitting","submitSuccess","submitError","bugSlice","name","reducers","updateDescription","state","action","payload","resetBugReportForm","extraReducers","builder","addCase","pending","fulfilled","responseMessage","rejected","actions","reducer"],"sources":["/Users/ruth/Dropbox/Developer/apps/ps/rg/src/features/bug/bugSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk for submitting bug report\nexport const submitBugReport = createAsyncThunk(\n    'bugs/submitBugReport',\n    async (bugData, { rejectWithValue }) => {\n        try {\n            // API call to submit bug data\n            const response = await fetch('https://ruthprudence.com/rg/api/bug-report', {\n                method: 'POST',\n                body: JSON.stringify(bugData),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            // Check if the response is ok\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || 'Failed to submit bug report');\n            }\n\n            // Parse and return the response data\n            return await response.json();\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nconst initialState = {\n    description: '',\n    stepsToReproduce: '',\n    contactEmail: '',\n    isSubmitting: false,\n    submitSuccess: false,\n    submitError: null,\n};\n\nexport const bugSlice = createSlice({\n    name: 'bugs',\n    initialState,\n    reducers: {\n        updateDescription: (state, action) => {\n            state.description = action.payload;\n        },\n        // ... other reducers for updating form fields\n        resetBugReportForm: () => initialState,\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(submitBugReport.pending, (state) => {\n                state.isSubmitting = true;\n            })\n            .addCase(submitBugReport.fulfilled, (state, action) => {\n                state.isSubmitting = false;\n                state.submitSuccess = true;\n                state.submitError = null;\n                state.responseMessage = action.payload.message; // Store success message from response\n            })\n            .addCase(submitBugReport.rejected, (state, action) => {\n                state.isSubmitting = false;\n                state.submitError = action.payload; // Store error message\n            });\n    },\n});\n\nexport const { updateDescription, resetBugReportForm } = bugSlice.actions;\n\nexport default bugSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,eAAe,GAAGD,gBAAgB,CAC3C,sBAAsB,EACtB,OAAOE,OAAO,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACpC,IAAI;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;MACvEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO,CAAC;MAC7BQ,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;;IAEF;IACA,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,6BAA6B,CAAC;IACvE;;IAEA;IACA,OAAO,MAAMX,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAOb,eAAe,CAACa,KAAK,CAACD,OAAO,CAAC;EACzC;AACJ,CACJ,CAAC;AAED,MAAME,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,gBAAgB,EAAE,EAAE;EACpBC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE,KAAK;EACpBC,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGzB,WAAW,CAAC;EAChC0B,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE;IACNC,iBAAiB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACV,WAAW,GAAGW,MAAM,CAACC,OAAO;IACtC,CAAC;IACD;IACAC,kBAAkB,EAAEA,CAAA,KAAMd;EAC9B,CAAC;EACDe,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACjC,eAAe,CAACkC,OAAO,EAAGP,KAAK,IAAK;MACzCA,KAAK,CAACP,YAAY,GAAG,IAAI;IAC7B,CAAC,CAAC,CACDa,OAAO,CAACjC,eAAe,CAACmC,SAAS,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACP,YAAY,GAAG,KAAK;MAC1BO,KAAK,CAACN,aAAa,GAAG,IAAI;MAC1BM,KAAK,CAACL,WAAW,GAAG,IAAI;MACxBK,KAAK,CAACS,eAAe,GAAGR,MAAM,CAACC,OAAO,CAACf,OAAO,CAAC,CAAC;IACpD,CAAC,CAAC,CACDmB,OAAO,CAACjC,eAAe,CAACqC,QAAQ,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACP,YAAY,GAAG,KAAK;MAC1BO,KAAK,CAACL,WAAW,GAAGM,MAAM,CAACC,OAAO,CAAC,CAAC;IACxC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,iBAAiB;EAAEI;AAAmB,CAAC,GAAGP,QAAQ,CAACe,OAAO;AAEzE,eAAef,QAAQ,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}